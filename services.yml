apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-user
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb-user
  template:
    metadata:
      labels:
        app: mongodb-user
    spec:
      containers:
        - name: mongodb-user
          image: mongo:4.4
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: user-db
              mountPath: /data/db
          environment:
            - name: MONGO_INITDB_DATABASE
              value: users
      volumes:
        - name: user-db
          persistentVolumeClaim:
            claimName: user-db-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-user
spec:
  selector:
    app: mongodb-user
  ports:
    - protocol: TCP
      port: 27018
      targetPort: 27017
  type: ClusterIP

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-restaurant
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb-restaurant
  template:
    metadata:
      labels:
        app: mongodb-restaurant
    spec:
      containers:
        - name: mongodb-restaurant
          image: mongo:4.4
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: restaurant-db
              mountPath: /data/db
          environment:
            - name: MONGO_INITDB_DATABASE
              value: restaurants
      volumes:
        - name: restaurant-db
          persistentVolumeClaim:
            claimName: restaurant-db-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-restaurant
spec:
  selector:
    app: mongodb-restaurant
  ports:
    - protocol: TCP
      port: 27019
      targetPort: 27017
  type: ClusterIP

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: ubuntu/kafka:latest
          ports:
            - containerPort: 9093
            - containerPort: 9094
          env:
            - name: KAFKA_ADVERTISED_LISTENER
              value: INSIDE-KAFKA:9093
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL
              value: PLAINTEXT
            - name: KAFKA_LISTENER_NAMES
              value: INSIDE-KAFKA
            - name: KAFKA_LISTENER_PORT
              value: "9093"
            - name: KAFKA_LISTENER_INTERFACE
              value: "0.0.0.0"
            - name: KAFKA_LISTENER_INTERNAL
              value: INSIDE-KAFKA
            - name: KAFKA_LISTENER_INTERNAL_PORT
              value: "9093"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_LISTENER_NAME_INTERNAL
              value: INSIDE-KAFKA
            - name: KAFKA_LISTENER_NAME_EXTERNAL
              value: OUTSIDE-KAFKA

---
apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  selector:
    app: kafka
  ports:
    - protocol: TCP
      port: 9093
      targetPort: 9093
  type: ClusterIP

apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: ubuntu/zookeeper:latest
          ports:
            - containerPort: 2181
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"

---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  selector:
    app: zookeeper
  ports:
    - protocol: TCP
      port: 2181
      targetPort: 2181
  type: ClusterIP

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: user-db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: restaurant-db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

